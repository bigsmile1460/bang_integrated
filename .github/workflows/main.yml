name: Deploy to Server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t doughnutdough5/bangbangbang:latest .
          docker push doughnutdough5/bangbangbang:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        id: deploy-server
        if: contains(github.ref, 'dev')
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            CONTAINER_NAME=bang
            if [ $(docker ps -aq -f name=$CONTAINER_NAME) ]; then
              echo "Stopping and removing existing container: $CONTAINER_NAME"
              sudo docker stop $CONTAINER_NAME
              sudo docker rm $CONTAINER_NAME
            fi

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/bangbangbang
            sudo docker run --name $CONTAINER_NAME -d --env-file ${{ secrets.ENV_PATH }} -p 5555:5555 ${{ secrets.DOCKER_USERNAME }}/bangbangbang
            sudo docker image prune -f
            sudo docker container prune -f
